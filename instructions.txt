
# Знакомство с GIT

После установки программы **Git**, после входа в нее, необходимо представится.
Для этого необходимо ввести в терминале 2 команды:
1. git config --global user.name "Ваше имя на английском"
2. git config --global user.emal "Ваша электронная почта"

# Основные команды Git

* git init - иницилизация локального репозитория
* git status - получить информацию от git о его текущем состоянии
* git add - добавить файл или файлы к следующему коммиту
* git commit -m "message" - создание коммита
* git log - вывод на экран истории всех коммитов с их хеш-кодами
* git checkout - переход от одного коммита к другому
* git checkout master - вернуться к актуальному состоянию и продолжить работу
* git diff - увидеть разницу между текущим файлом и закоммиченным файлом

# Синтаксис языка Markdown

Для работы в текстовом редакторе используется язык Markdown.
Например:
# Заголовок - выделение заголовков. Количество символов "#" задает уровень заголовка (поддерживается 6 уровней)
= или - - подчеркивание этими символами (не менее 3 подряд) выделяют заголовки первого ("_") и второго ("=") уровней.
**Полужирное начертание** или __Полужирное начертание__
*Курсивное начертание* или _Курсивное начартание_
***Полужирное курсивное начертание***
~~Зачеркнутый текст~~
* Строка - ненумерованные списки, символ "*" в начале строки
1,2,3 ... - нумерованные списки

# Создание текстового файла

Для создания текстового файла необходимо ввести следующую команду touch XXX.txt,где XXX - наименование файла на английском, txt - расширение.
Чтобы начать непосредственно печать, вначале входим в редактор ***vim XXX.txt***, приступая к печате вводим сочетание ESC, i - одновременно.
Готово, можно приступать.
Выходя из редактора, необходимо ввести поочередно ESC, :, w,q.
Чтобы увидеть как будет отображаться текст, в терминале выводим команду cat XXX.txt

# создание веток

краткий список команд
*git branch - посмотреть список веток в репозитории
*git branch "название ветки" - создать новую ветку
*git checkout "название ветки" - переход к другой ветке
*git branch -d "название ветки" - удалить ветку

#Работа в GiiHub

Краткий список команд
*git clone <url-адрес репозитория> - клонирование внешнего репозитория на локальный ПК
*git pull - получение изменений и слияние с локальной версией
git push - отправляет локальную версию репозитория на внешний

коней ознакомиьтельного фрагмента.

